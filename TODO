Tasks
----------------------------
Testing.

New features
----------------------------
 
- Upload files and images. Discriminate by categories.
- Ajax forms with jquery error messages.
- New behaviour for controllers based in classes.
- Need unify javascript, css and image loading on a lonely interface. Jscript need don't use -- for paths, use compression for server, don't use on the system. Css and image need new loading, for example, first see on view, after on module. 

Knowed Bugs
----------------------------

- Need many fixes on ckeditor and multilanguage scripts for clean the code.
- Big bug on dates when the user timezone is not the same of timezone of php system.

New Features for next versions.
----------------------------

- Save config on classes.
- Caching querys. With php raw or non-sql databases.
- A function to make switchs easily and clean. 
- Make a multilogin?.
- Title in flags of languages.
- Modules loading automatically in $activated_controllers.
- Better installer.
- Delete multiple elements in admin list.
- Dependencies for modules. 
- Function to sql update for models, similar to insert.sql.
- Add multiple columns blocks with name, no numbers. Now is 0=left, 1=right, 2=barr. Create multiple columns from database.
- For raw sql querys in update_table use functions in mysql.php/postgresql.php, etc, that return querys for databases.
- Add signature to emails in config_data
- Create support for upgrades to new versions.
- Create a constant where is showed the phango version. The upgrades need make for version to version. Versions x.x don't need beast upgrade because i don't change the db. Versions x+1.0, yes.
- Tool for clean i18n. 
- Tool for translations via web.
- Helpers for create "where" in querys. Very simple, an array, and the simbols into value, example: 'IdProduct' => array('and[or][...][by default and]', 5), and check component IdProduct.
- Multiple databases without problems. Don't need db by default.
- Cache system in database.
- Config index page in pages module.
- Connect with mysql when make the first connection.
- Navigator type django in top menu. I can create a object where i write the order of the controllers in menu.
- In check language status, set lang to search.
- Make CharFields i18n, creating a array and serialize and count its length
- Make a function for reading directories with a callback.
- Put media in other server, add other variable called $media_url
- Deprecating yes_entities.
- A little system for process post automatically.
- Add signals to position management. For change order simply position=position-1 where position<=new_position, and update the row with the new position.
- Add Distinct to models?
- Add new listing more simple that BasicList.
- Add to basiclist the posibility of hidden the search form.
- A function that show a text with option to send a mail to the administrator.
- Make a more secure password recovery.
- In admin,include submenus by module. Obtain an array from model file?.
- Configure modules in administrator.
- If error in generate_admin_ng update or insert,but the error is in a field don't required, put text in redirection.

Brainstorming ideas.
----------------------------

- Function for element lists.
- Optimize related fields, creating components in the foreignkeyfield?
	You create the foreignkeyfield, use methods for create related_fields for models and add components to model?, now, new components fields created on fly. Well, its don't use many cpu why is simple aliasing with & and a new component is not created.
-A function for generate different switch for admin?.
-Engine for create very simple urls, a frontend for make_fancy_url
- A Gui for create applications using components.

